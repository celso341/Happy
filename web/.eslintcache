[{"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\index.tsx":"1","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\Landing.tsx":"2","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\Orphanage.tsx":"3","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\components\\Sidebar.tsx":"4","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\routes.tsx":"5","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\CreateOrphanage.tsx":"6","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\App.tsx":"7","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\utils\\mapIcon.tsx":"8","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\OrphanagesMap.tsx":"9"},{"size":198,"mtime":1606389780000,"results":"10","hashOfConfig":"11"},{"size":954,"mtime":1606412828000,"results":"12","hashOfConfig":"11"},{"size":4226,"mtime":1616632399401,"results":"13","hashOfConfig":"11"},{"size":548,"mtime":1607555100000,"results":"14","hashOfConfig":"11"},{"size":741,"mtime":1607553430000,"results":"15","hashOfConfig":"11"},{"size":6044,"mtime":1616699854941,"results":"16","hashOfConfig":"11"},{"size":199,"mtime":1607558172000,"results":"17","hashOfConfig":"11"},{"size":240,"mtime":1607646244000,"results":"18","hashOfConfig":"11"},{"size":2720,"mtime":1616632307032,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wbpm4e",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\index.tsx",[],"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\Landing.tsx",[],"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\Orphanage.tsx",["40","41"],"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\components\\Sidebar.tsx",[],"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\routes.tsx",[],["42","43"],"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\CreateOrphanage.tsx",["44"],"import React, { ChangeEvent, FormEvent, useState } from \"react\";\nimport { Map, Marker, TileLayer } from 'react-leaflet';   // MapContainer\nimport { LeafletMouseEvent } from 'leaflet';\nimport { useHistory } from \"react-router\";\n\nimport { FiPlus } from \"react-icons/fi\";\n\nimport Sidebar from \"../components/Sidebar\";\nimport mapIcon from '../utils/mapIcon';\n\n\nimport '../styles/pages/create-orphanage.css';\nimport api from \"../services/api\";\nimport { hostname } from \"os\";\n\nexport default function CreateOrphanage() {\n\n  const history = useHistory();\n\n  const [position, setPosition] = useState({ latitude: 0, longitude: 0});\n\n  const [ name, setName ] = useState('');\n  const [ about, setAbout ] = useState('');\n  const [ instructions, setInstructions ] = useState('');\n  const [ opening_hours, setOpeningHours ] = useState('');\n  const [ open_on_weekends, setOpenOnWeekends ] = useState(true);\n  const [ images, setImages ] = useState<File[]>([]);\n  const [ previewImages, setPreviewImages ] = useState<string[]>([]);\n\n  function handleMapClick(event: LeafletMouseEvent) {\n    const { lat, lng } = event.latlng;\n\n    setPosition({\n      latitude: lat,\n      longitude: lng,\n    });\n  }\n\n  function handleSelectImages(event: ChangeEvent<HTMLInputElement>) {\n    if (!event.target.files) {\n      return;\n    }\n    \n    const selectedImages = Array.from(event.target.files)\n\n    setImages(selectedImages);\n\n    const selectedImagesPreview = selectedImages.map(image => {\n      return URL.createObjectURL(image)\n    });\n\n    setPreviewImages(selectedImagesPreview);\n  }\n\n  async function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    const { latitude, longitude } = position;\n\n    const data = new FormData();\n\n    data.append('name', name);\n    data.append('about', about);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('instructions', instructions);\n    data.append('opening_hours', opening_hours);\n    data.append('open_on_weekends', String(open_on_weekends));\n\n    images.forEach(image => {\n      data.append('images', image);\n    })\n\n    await api.post('orphanages', data);\n    alert('Cadastro realizado com sucesso!');\n\n    history.push('/app');\n  }\n\n  return (\n    <div id=\"page-create-orphanage\">\n      <Sidebar />\n\n      <main>\n        <form onSubmit={handleSubmit} className=\"create-orphanage-form\">\n          <fieldset>\n            <legend>Dados</legend>\n\n            <Map\n              center={[-23.5465893,-46.4292901,]} \n              style={{ width: '100%', height: 280 }}\n              zoom={15}\n              onClick={handleMapClick}\n            >\n              <TileLayer \n                url={`https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}@2x?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`}\n              />\n\n              { position.latitude !== 0 && (\n                <Marker \n                  interactive={false} \n                  icon={mapIcon} \n                  position={[\n                    position.latitude, \n                    position.longitude\n                  ]} \n                />\n              )}\n            </Map>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"name\">Nome</label>\n              <input \n                id=\"name\" \n                value={name} \n                onChange={event => setName(event.target.value)} \n              />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"about\">Sobre <span>Máximo de 300 caracteres</span></label>\n              <textarea \n                id=\"name\" \n                maxLength={300} \n                value={about} \n                onChange={event => setAbout(event.target.value)} \n              />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"images\">Fotos</label>\n\n              <div className=\"images-container\">\n                {previewImages.map(image => {\n                  return (\n                    <img key={image} src={image} alt={name}/>\n                  )\n                })}\n                <label htmlFor=\"image[]\" className=\"new-image\">\n                  <FiPlus size={24} color=\"#15b6d6\" />\n                </label>\n              </div>\n              <input multiple onChange={handleSelectImages} type=\"file\" id=\"image[]\" />\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>Visitação</legend>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"instructions\">Instruções</label>\n              <textarea \n                id=\"instructions\" \n                value={instructions} \n                onChange={event => setInstructions(event.target.value)} \n              />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"opening_hours\">Horário de funcionamento</label>\n              <input \n                id=\"opening_hours\" \n                value={opening_hours} \n                onChange={event => setOpeningHours(event.target.value)} \n              />\n            </div>\n\n            <div className=\"input-block\">\n              <label htmlFor=\"open_on_weekends\">Atende fim de semana</label>\n\n              <div className=\"button-select\">\n                <button \n                  type=\"button\" \n                  className={open_on_weekends ? 'active' : ''}\n                  onClick={() => setOpenOnWeekends(true)}\n                >\n                  Sim\n                </button>\n                <button \n                type=\"button\"\n                className={!open_on_weekends ? 'active' : ''}\n                onClick={() => setOpenOnWeekends(false)}\n                >\n                  Não\n                </button>\n              </div>\n            </div>\n          </fieldset>\n\n          <button className=\"confirm-button\" type=\"submit\">\n            Confirmar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n\n// return `https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;\n","C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\App.tsx",[],"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\utils\\mapIcon.tsx",[],"C:\\Users\\Celso\\Documents\\www\\NLW03\\web\\src\\pages\\OrphanagesMap.tsx",[],{"ruleId":"45","severity":1,"message":"46","line":32,"column":25,"nodeType":"47","messageId":"48","endLine":32,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":34,"column":46,"nodeType":"47","messageId":"51","endLine":34,"endColumn":55},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"49","severity":1,"message":"56","line":14,"column":10,"nodeType":"47","messageId":"51","endLine":14,"endColumn":18},"@typescript-eslint/no-redeclare","'Orphanage' is already defined.","Identifier","redeclared","@typescript-eslint/no-unused-vars","'Orphanage' is defined but never used.","unusedVar","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'hostname' is defined but never used.","no-global-assign","no-unsafe-negation"]